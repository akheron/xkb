default xkb_symbols "akheron" {
    key <ESC> { [ Escape ] };

    key.type = "TWO_LEVEL";
    key <Q1> {
        type = "THREE_LEVEL",
        symbols = [ 1, exclam, 1 ],
        actions = [
          NoAction(), NoAction(),
          RedirectKey(key=<Q1>, mods=Control, clearmods=Mod5)
        ]
    };
    key <Q2> {
        type[1] = "THREE_LEVEL",
        symbols[1] = [ 2, quotedbl, 2 ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<Q2>, mods=Control, clearmods=Mod5)
        ],
        symbols[2] = [ at ]
    };
    key <Q3> {
        type[1] = "THREE_LEVEL",
        symbols[1] = [ 3, numbersign, 3 ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<Q3>, mods=Control, clearmods=Mod5)
        ],
        symbols[2] = [ sterling ]
    };
    key <Q4> {
        type[1] = "THREE_LEVEL",
        symbols[1] = [ 4, dollar, 4 ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<Q4>, mods=Control, clearmods=Mod5)
        ],
        symbols[2] = [ EuroSign ]
    };
    key <Q5> {
        type = "THREE_LEVEL",
        symbols = [ 5, percent, 5 ],
        actions = [
          NoAction(), NoAction(),
          RedirectKey(key=<Q5>, mods=Control, clearmods=Mod5)
        ]
    };
    key <Q6> {
        type = "THREE_LEVEL",
        symbols = [ 6, ampersand, 6 ],
        actions = [
          NoAction(), NoAction(),
          RedirectKey(key=<Q6>, mods=Control, clearmods=Mod5)
        ]
    };
    key <Q7> {
        type[1] = "THREE_LEVEL",
        symbols[1] = [ 7, slash, 7 ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<Q7>, mods=Control, clearmods=Mod5)
        ],
        symbols[2] = [ braceleft ]
    };
    key <Q8> {
        type[1] = "THREE_LEVEL",
        symbols[1] = [ 8, parenleft, 8 ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<Q8>, mods=Control, clearmods=Mod5)
        ],
        symbols[2] = [ bracketleft ]
    };
    key <Q9> {
        type[1] = "THREE_LEVEL",
        symbols[1] = [ 9, parenright, 9 ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<Q9>, mods=Control, clearmods=Mod5)
        ],
        symbols[2] = [ bracketright ]
    };
    key <Q0> {
        type[1] = "THREE_LEVEL",
        symbols[1] = [ 0, equal, 0 ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<Q0>, mods=Control, clearmods=Mod5)
        ],
        symbols[2] = [ braceright ]
    };
    key <QPLS> {
        type[1] = "THREE_LEVEL",
        symbols[1] = [ plus, question, plus ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<QPLS>, mods=Control, clearmods=Mod5)
        ],
        symbols[2] = [ backslash ]
    };
    key <QRQ> { [ asciicircum ], [ dead_circumflex ] };
    key <BKSP> { type = "ONE_LEVEL", [ BackSpace ] };

    key <TAB> {
        type = "THREE_LEVEL",
        symbols = [ Tab, Tab, Tab ],
        actions = [
          NoAction(), NoAction(),
          RedirectKey(key=<TAB>, mods=Control, clearmods=Mod5)
        ]
    };

    key.type = "ALPHABETIC";
    key <QQ> {
        type[1] = "ALPHABETIC+MOD5",
        symbols[1] = [ q, Q, q ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<QQ>, mods=Control, clearmods=Mod5)
        ],
        type[2] = "TWO_LEVEL",
        symbols[2] = [ less ]
    };
    key <QW> {
        type[1] = "ALPHABETIC+MOD5",
        symbols[1] = [ w, W, w ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<QW>, mods=Control, clearmods=Mod5)
        ],
        type[2] = "TWO_LEVEL",
        symbols[2] = [ greater ]
    };
    key <QE> {
        type[1] = "ALPHABETIC+MOD5",
        symbols[1] = [ f, F, f ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<QE>, mods=Control, clearmods=Mod5)
        ],
        type[2] = "TWO_LEVEL",
        symbols[2] = [ equal ]
    };
    key <QR> {
        type[1] = "ALPHABETIC+MOD5",
        symbols[1] = [ p, P, p ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<QR>, mods=Control, clearmods=Mod5)
        ]
    };
    key <QT> {
        type[1] = "ALPHABETIC+MOD5",
        symbols[1] = [ b, B, b ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<QT>, mods=Control, clearmods=Mod5)
        ]
    };
    key <QY> {
        type[1] = "ALPHABETIC+MOD5",
        symbols[1] = [ j, J, j ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<QY>, mods=Control, clearmods=Mod5)
        ]
    };
    // l, L, Backspace, C-w, -
    key <QU> {
        type[1] = "SHIFT_LOCK_MOD5_ALT",
        symbols[1] = [ l, L, l ],
        actions[1] = [
            NoAction(), NoAction(),
            RedirectKey(key=<BKSP>, clearmods=Mod5),
            RedirectKey(key=<QW>, mods=Control, clearmods=Mod1),
            NoAction()
        ]
    };
    // u, U, Up, -, PgUp
    key <QI> {
        type[1] = "SHIFT_LOCK_MOD5_ALT",
        symbols[1] = [ u, U, Up, NoSymbol, Prior ],
        actions[1] = [
            NoAction(), NoAction(),
            RedirectKey(key=<UP>, clearmods=Mod5),
            NoAction(),
            RedirectKey(key=<PGUP>, clearmods=Mod5+Mod1)
        ],
        symbols[2] = [ bracketleft ]
    };
    // y, Y, Delete, M-d, C-k
    key <QO> {
        type[1] = "SHIFT_LOCK_MOD5_ALT",
        symbols[1] = [ y, Y, Delete, d, k ],
        actions[1] = [
            NoAction(), NoAction(),
            RedirectKey(key=<DELE>, clearmods=Mod5),
            RedirectKey(key=<QC>),
            RedirectKey(key=<QH>, mods=Control, clearmods=Mod5+Mod1)
        ],
        symbols[2] = [ bracketright ]
    };
    key <QP> { [ odiaeresis, Odiaeresis ] };
    key <QAR> { [ aring, Aring ] };
    key <RTRN> {
      type = "ONE_LEVEL",
      [ Return ]
    };
    key <LCTL> { type="ONE_LEVEL", [ Control_L ] };
    key <QA> {
        type[1] = "ALPHABETIC+MOD5",
        symbols[1] = [ a, A, a ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<QA>, mods=Control, clearmods=Mod5)
        ],
        symbols[2] = [ underscore ]
    };
    key <QS> {
        type[1] = "ALPHABETIC+MOD5",
        symbols[1] = [ r, R, r ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<QS>, mods=Control, clearmods=Mod5)
        ],
        symbols[2] = [ minus ]
    };
    key <QD> {
        type[1] = "ALPHABETIC+MOD5",
        symbols[1] = [ s, S, s ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<QD>, mods=Control, clearmods=Mod5)
        ],
        symbols[2] = [ slash ]
    };
    key <QF> {
        type[1] = "ALPHABETIC+MOD5",
        symbols[1] = [ t, T, t ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<QF>, mods=Control, clearmods=Mod5)
        ],
        symbols[2] = [ question ]
    };
    key <QG> {
        type[1] = "ALPHABETIC+MOD5",
        symbols[1] = [ g, G, g ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<QG>, mods=Control, clearmods=Mod5)
        ]
    };
    // k, K, C-x, M-x, -
    key <QH> {
        type[1] = "SHIFT_LOCK_MOD5_ALT",
        [ k, K ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<QZ>, mods=Control, clearmods=Mod5),
          RedirectKey(key=<QZ>),
          NoAction()
        ]
    };
    // n, N, Left, M-b, Home
    key <QJ> {
        type[1] = "SHIFT_LOCK_MOD5_ALT",
        [ n, N ],
        actions[1] = [
            NoAction(), NoAction(),
            RedirectKey(key=<LEFT>, clearmods=Mod5),
            RedirectKey(key=<QT>),
            RedirectKey(key=<HOME>, clearmods=Mod5+Mod1)
        ],
        symbols[2] = [ braceleft ]
    };
    // e, E, Down, -, PgDown
    key <QK> {
        type[1] = "SHIFT_LOCK_MOD5_ALT",
        [ e, E ],
        actions[1] = [
            NoAction(), NoAction(),
            RedirectKey(key=<DOWN>, clearmods=Mod5),
            NoAction(),
            RedirectKey(key=<PGDN>, clearmods=Mod5+Mod1)
        ],
        symbols[2] = [ parenleft ]
    };
    // i, I, Right, M-f, End
    key <QL> {
        type[1] = "SHIFT_LOCK_MOD5_ALT",
        [ i, I ],
        actions[1] = [
            NoAction(), NoAction(),
            RedirectKey(key=<RGHT>, clearmods=Mod5),
            RedirectKey(key=<QE>),
            RedirectKey(key=<END>, clearmods=Mod5+Mod1)
        ],
        symbols[2] = [ parenright ]
    };
    key <QOE> {
        type[1] = "SHIFT_LOCK_MOD5_ALT",
        symbols[1] = [ o, O ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<QOE>, mods=Control, clearmods=Mod5)
        ],
        symbols[2] = [ braceright ]
    };
    // ä, Ä, C-l, -, -
    key <QAE> {
        type[1] = "SHIFT_LOCK_MOD5_ALT",
        [ adiaeresis, Adiaeresis ],
        actions[1] = [
            NoAction(), NoAction(),
            RedirectKey(key=<QU>, mods=Control, clearmods=Mod5),
            NoAction(),
            NoAction()
        ]
    };
    key <QSEC> { type="TWO_LEVEL", [ grave, asciitilde ], [ dead_grave, dead_tilde ] };
    key <LFSH> { type="ONE_LEVEL", [ Shift_L] };
    key <QAPO> { type="TWO_LEVEL", [ apostrophe, asterisk ] };
    key <QLT> {
        type[1] = "ALPHABETIC+MOD5",
        symbols[1] = [ z, Z, z ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<QLT>, mods=Control, clearmods=Mod5)
        ],
        symbols[2] = [ bar ] };
    key <QZ> {
        type[1] = "ALPHABETIC+MOD5",
        symbols[1] = [ x, X, x ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<QZ>, mods=Control, clearmods=Mod5)
        ]
    };
    key <QX> {
        type[1] = "ALPHABETIC+MOD5",
        symbols[1] = [ c, C, c ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<QX>, mods=Control, clearmods=Mod5)
        ],
        symbols[2] = [ colon ]
    };
    key <QC> {
        type[1] = "ALPHABETIC+MOD5",
        symbols[1] = [ d, D, d ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<QC>, mods=Control, clearmods=Mod5)
        ],
        symbols[2] = [ semicolon ]
    };
    key <QV> {
        type[1] = "ALPHABETIC+MOD5",
        symbols[1] = [ v, V, v ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<QV>, mods=Control, clearmods=Mod5)
        ]
    };
    key <QB> { type="ONE_LEVEL", [ Caps_Lock ] };
    // m, M, Shift-Insert, M-y, C-M-y
    key <QN> {
        type = "SHIFT_LOCK_MOD5_ALT",
        symbols[1] = [ m, M ],
        actions[1] = [
            NoAction(), NoAction(),
            RedirectKey(key=<INS>, mods=Shift, clearmods=Mod5),
            RedirectKey(key=<QO>),
            RedirectKey(key=<QO>, mods=Control, clearmods=Mod5)
        ]
    };
    key <QM> {
        type[1] = "ALPHABETIC+MOD5",
        symbols[1] = [ h, H ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<QM>, mods=Control, clearmods=Mod5)
        ]
    };
    key <QCOM> { type="TWO_LEVEL", [ comma, semicolon ] };
    key <QPER> { type="TWO_LEVEL", [ period, colon ] };
    key <QMIN> {
       type[1] = "THREE_LEVEL",
       symbols[1] = [ minus, underscore, minus ],
       actions[1] = [
         NoAction(), NoAction(),
         RedirectKey(key=<QMIN>, mods=Control, clearmods=Mod5)
       ]
    };
    key <RTSH> { type="ONE_LEVEL", [ Shift_R ] };
    key <LALT> { type="ONE_LEVEL", [ Alt_L ] };
    key <SPCE> {
        type[1] = "THREE_LEVEL",
        symbols[1] = [ space, space, space ],
        actions[1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<SPCE>, mods=Control, clearmods=Mod5)
        ],
        symbols[2] = [ space, nobreakspace ]
    };
    key <CAPS> { type="ONE_LEVEL", [ ISO_Level3_Shift ] };
    key <SCLK> { type="ONE_LEVEL", [ Scroll_Lock ] };

    key.type = "CTRL+ALT";
    key <F1> { [ F1, XF86Switch_VT_1 ] };
    key <F2> { [ F2, XF86Switch_VT_2 ] };
    key <F3> { [ F3, XF86Switch_VT_3 ] };
    key <F4> { [ F4, XF86Switch_VT_4 ] };
    key <F5> { [ F5, XF86Switch_VT_5 ] };
    key <F6> { [ F6, XF86Switch_VT_6 ] };
    key <F7> { [ F7, XF86Switch_VT_7 ] };
    key <F8> { [ F8, XF86Switch_VT_8 ] };
    key <F9> { [ F9, XF86Switch_VT_9 ] };
    key <F10> { [ F10, XF86Switch_VT_10 ] };
    key <F11> { [ F11, XF86Switch_VT_11 ] };
    key <F12> { [ F12, XF86Switch_VT_12 ] };

    key.type = "ONE_LEVEL";
    key <RCTL> { [ Control_R, Control_R ] };
    key <PRSC> { [ Print ] };
    key <RALT> { [ Mode_switch ] };
    key <HOME> { [ Home ] };
    key <UP> { [ Up ] };
    key <PGUP> { [ Prior ] };
    key <LEFT> { [ Left ] };
    key <RGHT> { [ Right ] };
    key <END> { [ End ] };
    key <DOWN> { [ Down ] };
    key <PGDN> { [ Next ] };
    key <INS> { [ Insert ] };
    key <DELE> { [ Delete ] };
    key <MUTE> { [ XF86AudioMute ] };
    key <VOL-> { [ XF86AudioLowerVolume ] };
    key <VOL+> { [ XF86AudioRaiseVolume ] };
    key <LWIN> { [ Super_L ] };
    key <COMP> { [ Menu ] };

    modifier_map Control { <LCTL> };
    modifier_map Shift { <LFSH>, <RTSH> };
    modifier_map Lock { <QB> };
    modifier_map Mod1 { <LALT> };
    modifier_map Control { <CAPS>, <RCTL> };
    modifier_map Mod4 { <LWIN> };
};
